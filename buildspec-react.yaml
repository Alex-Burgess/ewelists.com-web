version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo Installing NPM dependencies...
      - npm install --production
  pre_build:
    commands:
      - scripts/deploy_web_check.sh ${PIPELINE}
      - |
        if [ $? != 0 ]; then
          UPDATE_CONTENT="false"
        else
          UPDATE_CONTENT="true"
        fi
      - echo "UPDATE_CONTENT:$UPDATE_CONTENT"
      - |
        if [ $BUILD_CROSS_ACCOUNT_ROLE != "" ]; then
          ROLE_ARN="arn:aws:iam::$ACCOUNT_ID:role/$BUILD_CROSS_ACCOUNT_ROLE"
          echo "Assuming role:$ROLE_ARN"
          TEMP_ROLE=$(aws sts assume-role --role-arn "$ROLE_ARN" --role-session-name "webdeploy")
          export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile webdeploy
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile webdeploy
          aws configure set aws_session_token $AWS_SESSION_TOKEN --profile webdeploy
        else
          echo No role to assume
        fi
  build:
    commands:
      - REACT_APP_STAGE=${ENVIRONMENT} REACT_APP_SENTRY=true npm run build
      - mv build/${ENVIRONMENT}.robots.txt build/robots.txt;
      - rm build/*.robots.txt
      - |
        if [ $UPDATE_CONTENT = "true" ]; then
          scripts/deploy.sh $WEB_BUCKET
        else
          echo No updates to Web content, not syncing.
        fi
artifacts:
  files:
    - '**/*'
  base-directory: build
