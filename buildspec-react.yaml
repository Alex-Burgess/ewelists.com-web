version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo Installing NPM dependencies...
      - npm install
  pre_build:
    commands:
      - CLOUDFRONT_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?AliasICPRecordals[?CNAME=='$WEB_BUCKET']].{ID:Id}" --output text)
      - echo CloudFront ID $CLOUDFRONT_ID
      - TRIGGER=$(aws codepipeline list-pipeline-executions --pipeline-name main --query "pipelineExecutionSummaries[0].trigger.triggerType" --output text | head -1)
      - echo TRIGGER was $TRIGGER
      - PREVIOUS_STATE=$(aws codepipeline list-pipeline-executions --pipeline-name main --query "pipelineExecutionSummaries[1].status" --output text | head -1)
      - echo PREVIOUS_STATE was $PREVIOUS_STATE
      - PREVIOUS_COMMIT_ID=$(aws codepipeline list-pipeline-executions --pipeline-name main --query "pipelineExecutionSummaries[1].sourceRevisions[?actionName=='Web'].revisionId" --output text | head -1)
      - echo Latest commit $Commit_ID
      - echo Previous commit $PREVIOUS_COMMIT_ID
      - |
        if [ $TRIGGER = "StartPipelineExecution" ]; then
          echo Pipeline trigger was manual, $TRIGGER, updating content.
          UPDATE_CONTENT=true
        elif [ $PREVIOUS_STATE != "Succeeded" ]  && [ $PREVIOUS_STATE != "InProgress" ]; then
          echo Previous pipeline state was $PREVIOUS_STATE, updating content.
          UPDATE_CONTENT=true
        elif [ $Commit_ID != $PREVIOUS_COMMIT_ID ]; then
          echo "Web content was different, updating variable."
          UPDATE_CONTENT=true
        else
          echo "No need to update web contet."
          UPDATE_CONTENT=false
        fi
      - echo UPDATE_CONTENT is $UPDATE_CONTENT
  build:
    commands:
      - REACT_APP_STAGE=${ENVIRONMENT} npm run build
      - mv build/${ENVIRONMENT}.robots.txt build/robots.txt;
      - |
         if expr "${ENVIRONMENT}" : "prod" >/dev/null; then
           rm build/staging.robots.txt
         else
           rm build/prod.robots.txt;
         fi
      - echo Content will be synced to ${WEB_BUCKET}
      - |
        if [ $UPDATE_CONTENT = "true" ]; then
          aws s3 sync build/ s3://${WEB_BUCKET} --delete --exclude 'build/status.html'
        else
          echo No updates to Web content, not syncing.
        fi
      - |
        if [ $UPDATE_CONTENT = "true" ]; then
          aws s3 cp build/status.html s3://${WEB_BUCKET}/status.html --cache-control no-cache
        else
          echo No updates to Web content, not updating.
        fi
      - |
        if [ $UPDATE_CONTENT = "true" ]; then
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
        else
          echo No updates to Web content, not invalidating cache.
        fi
artifacts:
  files:
    - '**/*'
  base-directory: build
